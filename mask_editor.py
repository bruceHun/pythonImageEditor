# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'qt_ui_v2.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtWidgets
from image_processor import ImageProcessor, UIReferences
from launch_window import Ui_LaunchWindow


class Ui_MainWindow(object):
    # Worker
    IP = ImageProcessor()

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(958, 533)
        MainWindow.setStyleSheet("background-color: rgb(60, 60, 60);")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        self.SideBar = QtWidgets.QVBoxLayout()
        self.SideBar.setObjectName("SideBar")
        self.listWidget = QtWidgets.QListWidget(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.listWidget.sizePolicy().hasHeightForWidth())
        self.listWidget.setSizePolicy(sizePolicy)
        self.listWidget.setMinimumSize(QtCore.QSize(200, 0))
        self.listWidget.setStyleSheet("color: rgb(255, 255, 255);\n"
                                      "selection-background-color: rgb(26, 10, 249);\n"
                                      "background-color: rgb(22, 22, 22);")
        self.listWidget.setObjectName("listWidget")
        self.SideBar.addWidget(self.listWidget)
        self.BrushSizePanel = QtWidgets.QHBoxLayout()
        self.BrushSizePanel.setObjectName("BrushSizePanel")
        self.labelBrushSize = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelBrushSize.sizePolicy().hasHeightForWidth())
        self.labelBrushSize.setSizePolicy(sizePolicy)
        self.labelBrushSize.setStyleSheet("color: rgb(255, 255, 255);")
        self.labelBrushSize.setObjectName("labelBrushSize")
        self.BrushSizePanel.addWidget(self.labelBrushSize)
        self.BrushSizeSlider = QtWidgets.QSlider(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BrushSizeSlider.sizePolicy().hasHeightForWidth())
        self.BrushSizeSlider.setSizePolicy(sizePolicy)
        self.BrushSizeSlider.setMinimumSize(QtCore.QSize(0, 0))
        self.BrushSizeSlider.setOrientation(QtCore.Qt.Horizontal)
        self.BrushSizeSlider.setObjectName("BrushSizeSlider")
        self.BrushSizePanel.addWidget(self.BrushSizeSlider)
        self.BrushSizeSpinBox = QtWidgets.QSpinBox(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.BrushSizeSpinBox.sizePolicy().hasHeightForWidth())
        self.BrushSizeSpinBox.setSizePolicy(sizePolicy)
        self.BrushSizeSpinBox.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.BrushSizeSpinBox.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.BrushSizeSpinBox.setAlignment(QtCore.Qt.AlignRight | QtCore.Qt.AlignTrailing | QtCore.Qt.AlignVCenter)
        self.BrushSizeSpinBox.setMinimum(5)
        self.BrushSizeSpinBox.setMaximum(600)
        self.BrushSizeSpinBox.setObjectName("BrushSizeSpinBox")
        self.BrushSizePanel.addWidget(self.BrushSizeSpinBox)
        self.SideBar.addLayout(self.BrushSizePanel)
        self.BrushColorPanel = QtWidgets.QHBoxLayout()
        self.BrushColorPanel.setObjectName("BrushColorPanel")
        self.labelBrushColor = QtWidgets.QLabel(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelBrushColor.sizePolicy().hasHeightForWidth())
        self.labelBrushColor.setSizePolicy(sizePolicy)
        self.labelBrushColor.setStyleSheet("color: rgb(255, 255, 255);")
        self.labelBrushColor.setObjectName("labelBrushColor")
        self.BrushColorPanel.addWidget(self.labelBrushColor)
        self.ColorBtn1 = QtWidgets.QPushButton(self.centralwidget)
        self.ColorBtn1.setStyleSheet("background-color: rgb(252, 0, 0);")
        self.ColorBtn1.setText("")
        self.ColorBtn1.setObjectName("ColorBtn1")
        self.BrushColorPanel.addWidget(self.ColorBtn1)
        self.ColorBtn2 = QtWidgets.QPushButton(self.centralwidget)
        self.ColorBtn2.setStyleSheet("background-color: rgb(0, 255, 0);")
        self.ColorBtn2.setText("")
        self.ColorBtn2.setObjectName("ColorBtn2")
        self.BrushColorPanel.addWidget(self.ColorBtn2)
        self.ColorBtn3 = QtWidgets.QPushButton(self.centralwidget)
        self.ColorBtn3.setStyleSheet("background-color: rgb(0, 0, 255);")
        self.ColorBtn3.setText("")
        self.ColorBtn3.setObjectName("ColorBtn3")
        self.BrushColorPanel.addWidget(self.ColorBtn3)
        self.ColorBtn4 = QtWidgets.QPushButton(self.centralwidget)
        self.ColorBtn4.setStyleSheet("background-color: rgb(249, 39, 253);")
        self.ColorBtn4.setText("")
        self.ColorBtn4.setObjectName("ColorBtn4")
        self.BrushColorPanel.addWidget(self.ColorBtn4)
        self.SideBar.addLayout(self.BrushColorPanel)
        self.radioButtonErase = QtWidgets.QRadioButton(self.centralwidget)
        self.radioButtonErase.setStyleSheet("color: rgb(255, 255, 255);")
        self.radioButtonErase.setChecked(True)
        self.radioButtonErase.setObjectName("radioButtonErase")
        self.SideBar.addWidget(self.radioButtonErase)
        self.gridLayout.addLayout(self.SideBar, 0, 1, 2, 1)
        self.MainScreen = QtWidgets.QHBoxLayout()
        self.MainScreen.setObjectName("MainScreen")
        self.FuncBtn1 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FuncBtn1.sizePolicy().hasHeightForWidth())
        self.FuncBtn1.setSizePolicy(sizePolicy)
        self.FuncBtn1.setMinimumSize(QtCore.QSize(50, 0))
        self.FuncBtn1.setMaximumSize(QtCore.QSize(100, 16777215))
        self.FuncBtn1.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(90, 90, 90);")
        self.FuncBtn1.setObjectName("FuncBtn1")
        self.MainScreen.addWidget(self.FuncBtn1)
        self.FuncBtn2 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FuncBtn2.sizePolicy().hasHeightForWidth())
        self.FuncBtn2.setSizePolicy(sizePolicy)
        self.FuncBtn2.setMinimumSize(QtCore.QSize(50, 0))
        self.FuncBtn2.setMaximumSize(QtCore.QSize(100, 16777215))
        self.FuncBtn2.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(90, 90, 90);")
        self.FuncBtn2.setObjectName("FuncBtn2")
        self.MainScreen.addWidget(self.FuncBtn2)
        self.FuncBtn5 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FuncBtn5.sizePolicy().hasHeightForWidth())
        self.FuncBtn5.setSizePolicy(sizePolicy)
        self.FuncBtn5.setMinimumSize(QtCore.QSize(50, 0))
        self.FuncBtn5.setMaximumSize(QtCore.QSize(100, 16777215))
        self.FuncBtn5.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(90, 90, 90);")
        self.FuncBtn5.setObjectName("FuncBtn5")
        self.MainScreen.addWidget(self.FuncBtn5)
        self.FuncBtn6 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FuncBtn6.sizePolicy().hasHeightForWidth())
        self.FuncBtn6.setSizePolicy(sizePolicy)
        self.FuncBtn6.setMinimumSize(QtCore.QSize(50, 0))
        self.FuncBtn6.setMaximumSize(QtCore.QSize(100, 16777215))
        self.FuncBtn6.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(90, 90, 90);")
        self.FuncBtn6.setObjectName("FuncBtn6")
        self.MainScreen.addWidget(self.FuncBtn6)
        self.FuncBtn3 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FuncBtn3.sizePolicy().hasHeightForWidth())
        self.FuncBtn3.setSizePolicy(sizePolicy)
        self.FuncBtn3.setMinimumSize(QtCore.QSize(50, 0))
        self.FuncBtn3.setMaximumSize(QtCore.QSize(100, 16777215))
        self.FuncBtn3.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(90, 90, 90);")
        self.FuncBtn3.setObjectName("FuncBtn3")
        self.MainScreen.addWidget(self.FuncBtn3)
        self.FuncBtn4 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FuncBtn4.sizePolicy().hasHeightForWidth())
        self.FuncBtn4.setSizePolicy(sizePolicy)
        self.FuncBtn4.setMinimumSize(QtCore.QSize(50, 0))
        self.FuncBtn4.setMaximumSize(QtCore.QSize(100, 16777215))
        self.FuncBtn4.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(90, 90, 90);")
        self.FuncBtn4.setObjectName("FuncBtn4")
        self.MainScreen.addWidget(self.FuncBtn4)
        self.FuncBtn7 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FuncBtn7.sizePolicy().hasHeightForWidth())
        self.FuncBtn7.setSizePolicy(sizePolicy)
        self.FuncBtn7.setMinimumSize(QtCore.QSize(50, 0))
        self.FuncBtn7.setMaximumSize(QtCore.QSize(100, 16777215))
        self.FuncBtn7.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(90, 90, 90);")
        self.FuncBtn7.setObjectName("FuncBtn7")
        self.MainScreen.addWidget(self.FuncBtn7)
        self.FuncBtn8 = QtWidgets.QPushButton(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.FuncBtn8.sizePolicy().hasHeightForWidth())
        self.FuncBtn8.setSizePolicy(sizePolicy)
        self.FuncBtn8.setMinimumSize(QtCore.QSize(50, 0))
        self.FuncBtn8.setMaximumSize(QtCore.QSize(100, 16777215))
        self.FuncBtn8.setStyleSheet("color: rgb(255, 255, 255);\n"
                                    "background-color: rgb(90, 90, 90);")
        self.FuncBtn8.setObjectName("FuncBtn8")
        self.MainScreen.addWidget(self.FuncBtn8)
        self.gridLayout.addLayout(self.MainScreen, 1, 0, 1, 1)
        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.graphicsView.sizePolicy().hasHeightForWidth())
        self.graphicsView.setSizePolicy(sizePolicy)
        self.graphicsView.setSizeIncrement(QtCore.QSize(0, 0))
        self.graphicsView.setMouseTracking(True)
        self.graphicsView.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.graphicsView.setObjectName("graphicsView")
        self.gridLayout.addWidget(self.graphicsView, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 958, 21))
        self.menubar.setStyleSheet("color: rgb(255, 255, 255);\n"
                                   "selection-color: rgb(255, 170, 0);")
        self.menubar.setObjectName("menubar")
        self.menu_File = QtWidgets.QMenu(self.menubar)
        self.menu_File.setStyleSheet("color: rgb(255, 255, 255);")
        self.menu_File.setObjectName("menu_File")
        self.menu_Edit = QtWidgets.QMenu(self.menubar)
        self.menu_Edit.setObjectName("menu_Edit")
        self.menu_Help = QtWidgets.QMenu(self.menubar)
        self.menu_Help.setObjectName("menu_Help")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setStyleSheet("color: rgb(254, 204, 9);")
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_Setting = QtWidgets.QAction(MainWindow)
        self.action_Setting.setObjectName("action_Setting")
        self.action_Open = QtWidgets.QAction(MainWindow)
        self.action_Open.setObjectName("action_Open")
        self.action_Save_Mask = QtWidgets.QAction(MainWindow)
        self.action_Save_Mask.setObjectName("action_Save_Mask")
        self.actionSave_Label = QtWidgets.QAction(MainWindow)
        self.actionSave_Label.setObjectName("actionSave_Label")
        self.actionSettings = QtWidgets.QAction(MainWindow)
        self.actionSettings.setObjectName("actionSettings")
        self.action_Undo = QtWidgets.QAction(MainWindow)
        self.action_Undo.setObjectName("action_Undo")
        self.action_Redo = QtWidgets.QAction(MainWindow)
        self.action_Redo.setObjectName("action_Redo")
        self.actionI_m_working_on_it = QtWidgets.QAction(MainWindow)
        self.actionI_m_working_on_it.setObjectName("actionI_m_working_on_it")
        self.action_Quit = QtWidgets.QAction(MainWindow)
        self.action_Quit.setObjectName("action_Quit")
        self.menu_File.addAction(self.action_Open)
        self.menu_File.addAction(self.action_Save_Mask)
        self.menu_File.addAction(self.actionSave_Label)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.actionSettings)
        self.menu_File.addSeparator()
        self.menu_File.addAction(self.action_Quit)
        self.menu_Edit.addAction(self.action_Undo)
        self.menu_Edit.addAction(self.action_Redo)
        self.menu_Help.addAction(self.actionI_m_working_on_it)
        self.menubar.addAction(self.menu_File.menuAction())
        self.menubar.addAction(self.menu_Edit.menuAction())
        self.menubar.addAction(self.menu_Help.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        # 註冊事件
        self.register_functions()

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Mask Editor"))
        self.labelBrushSize.setText(_translate("MainWindow", "Brush Size"))
        self.labelBrushColor.setText(_translate("MainWindow", "Brush Color"))
        self.radioButtonErase.setText(_translate("MainWindow", "Erase Mode"))
        self.FuncBtn1.setText(_translate("MainWindow", "<<"))
        self.FuncBtn2.setText(_translate("MainWindow", ">>"))
        self.FuncBtn5.setText(_translate("MainWindow", "+"))
        self.FuncBtn6.setText(_translate("MainWindow", "-"))
        self.FuncBtn3.setText(_translate("MainWindow", "Undo"))
        self.FuncBtn4.setText(_translate("MainWindow", "Redo"))
        self.FuncBtn7.setText(_translate("MainWindow", "Save"))
        self.FuncBtn8.setText(_translate("MainWindow", "Delete"))
        self.menu_File.setTitle(_translate("MainWindow", "&File"))
        self.menu_Edit.setTitle(_translate("MainWindow", "&Edit"))
        self.menu_Help.setTitle(_translate("MainWindow", "&Help"))
        self.action_Setting.setText(_translate("MainWindow", "&Setting"))
        self.action_Open.setText(_translate("MainWindow", "&Open"))
        self.action_Save_Mask.setText(_translate("MainWindow", "&Save Mask"))
        self.actionSave_Label.setText(_translate("MainWindow", "Save Label"))
        self.actionSettings.setText(_translate("MainWindow", "Settings"))
        self.action_Undo.setText(_translate("MainWindow", "&Undo"))
        self.action_Redo.setText(_translate("MainWindow", "&Redo"))
        self.actionI_m_working_on_it.setText(_translate("MainWindow", "I\'m working on it!"))
        self.action_Quit.setText(_translate("MainWindow", "&Quit"))

    def register_functions(self):
        # 滑鼠事件
        self.graphicsView.mouseMoveEvent = self.IP.mouse_movement
        self.graphicsView.mousePressEvent = self.IP.start_paint
        self.graphicsView.mouseReleaseEvent = self.IP.end_paint
        # 鍵盤事件
        MainWindow.keyPressEvent = self.IP.key_event
        # 滾輪事件
        self.graphicsView.wheelEvent = self.IP.mouse_wheel_event
        # 離開程式事件
        MainWindow.closeEvent = self.IP.on_exit
        # 調整視窗大小事件
        MainWindow.resizeEvent = self.IP.scale_to_fit

    def init(self, lui: Ui_LaunchWindow):
        # 手動設定
        # 產生繪圖場景
        self.IP.scene = QtWidgets.QGraphicsScene()
        self.graphicsView.setScene(self.IP.scene)
        lui.progressBar.setValue(10)
        lui.label_2.setText('Initializing ImageProcessor...')

        # 初始化 ImageProcessor
        self.IP.init()
        self.IP.ui = UIReferences(
            self.centralwidget,
            self.graphicsView,
            self.statusbar,
            self.listWidget,
            self.BrushSizeSlider,
            self.BrushSizeSpinBox,
            self.FuncBtn1,
            self.FuncBtn2
        )
        lui.progressBar.setValue(20)
        lui.label_2.setText('Linking functions...')
        # 連結 UI 功能
        self.action_Open.triggered.connect(lambda: self.IP.init(True))
        self.action_Save_Mask.triggered.connect(self.IP.save_mask)
        self.actionSave_Label.triggered.connect(self.IP.save_lable_image)
        self.action_Quit.triggered.connect(MainWindow.close)
        self.action_Undo.triggered.connect(self.IP.undo_changes)
        self.action_Redo.triggered.connect(self.IP.redo_changes)
        self.FuncBtn1.clicked.connect(lambda: self.IP.change_image(max(self.IP.index - 1, 0)))
        self.FuncBtn2.clicked.connect(
            lambda: self.IP.change_image(min(self.IP.index + 1, len(self.IP.image_list) - 1)))
        self.FuncBtn3.clicked.connect(self.IP.undo_changes)
        self.FuncBtn4.clicked.connect(self.IP.redo_changes)
        self.FuncBtn5.clicked.connect(lambda: self.IP.scale_display(self.IP.zoom_scale))
        self.FuncBtn6.clicked.connect(lambda: self.IP.scale_display(-self.IP.zoom_scale))
        self.FuncBtn7.clicked.connect(self.IP.save_mask)
        self.FuncBtn8.clicked.connect(self.IP.delete_mask)
        self.listWidget.itemClicked.connect(lambda: self.IP.change_image(self.listWidget.currentRow()))
        self.BrushSizeSlider.valueChanged.connect(lambda:
                                                  self.BrushSizeSpinBox.setValue(
                                                      int((self.BrushSizeSlider.value() + 1) * 5))
                                                  )
        self.BrushSizeSlider.sliderReleased.connect(lambda: self.IP.change_brush_size(False))
        self.BrushSizeSpinBox.editingFinished.connect(lambda: self.IP.change_brush_size(True))
        self.ColorBtn1.clicked.connect(lambda: self.IP.change_brush_color(0))
        self.ColorBtn2.clicked.connect(lambda: self.IP.change_brush_color(1))
        self.ColorBtn3.clicked.connect(lambda: self.IP.change_brush_color(2))
        self.ColorBtn4.clicked.connect(lambda: self.IP.change_brush_color(3))
        self.radioButtonErase.clicked.connect(self.IP.erase_mode_flipflop)
        lui.progressBar.setValue(30)
        lui.label_2.setText('Setting callbacks...')

        # 檔案列表
        self.listWidget.addItems(self.IP.image_list)
        lui.progressBar.setValue(40)
        lui.label_2.setText('Setting initial image...')
        # 設定初始圖片
        self.IP.change_image(self.IP.index)
        lui.progressBar.setValue(80)
        lui.label_2.setText('Opening Editor...')
        # 產生筆刷游標
        self.BrushSizeSpinBox.setValue(self.IP.brush_size)
        self.IP.change_brush_size(True)
        lui.progressBar.setValue(100)
        # 關閉載入畫面
        launch_window.close()
        ##


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    # 顯示載入畫面
    launch_window = QtWidgets.QDialog()
    lui = Ui_LaunchWindow()
    lui.setupUi(launch_window)
    launch_window.show()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    ui.init(lui)
    sys.exit(app.exec_())

